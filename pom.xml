<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<groupId>com.hedera.hashgraph</groupId>
	<artifactId>hedera-services</artifactId>
	<version>0.26.0-SNAPSHOT</version>
	<description>
		Hedera Services (crypto, file, contract, consensus) on the Platform
	</description>
	<inceptionYear>2018</inceptionYear>
	<modelVersion>4.0.0</modelVersion>
	<name>Hedera Services</name>
	<packaging>pom</packaging>
	<url>https://github.com/hashgraph/hedera-services</url>
	<organization>
		<name>Hedera Hashgraph, LLC</name>
		<url>https://hedera.com</url>
	</organization>

	<scm>
		<url>https://github.com/hashgraph/hedera-services</url>
		<connection>scm:git:git@github.com:hashgraph/hedera-services.git</connection>
		<developerConnection>scm:git:git@github.com:hashgraph/hedera-services.git</developerConnection>
		<tag>HEAD</tag>
	</scm>

	<developers>
		<developer>
			<name>Abhishek Pandey</name>
			<email>abhishek.pandey@hedera.com</email>
			<organization>Hedera Hashgraph, LLC</organization>
			<organizationUrl>https://www.hedera.com</organizationUrl>
		</developer>
		<developer>
			<name>Anirudh Ghanta</name>
			<email>anirudh.ghanta@hedera.com</email>
			<organization>Hedera Hashgraph, LLC</organization>
			<organizationUrl>https://www.hedera.com</organizationUrl>
		</developer>
		<developer>
			<name>Cesar Vazquez</name>
			<email>cesarvazquez@swirlds.com</email>
			<organization>Swirlds, Inc.</organization>
			<organizationUrl>https://www.swirlds.com</organizationUrl>
		</developer>
		<developer>
			<name>Jeffrey Tang</name>
			<email>jeffrey@swirlds.com</email>
			<organization>Swirlds, Inc.</organization>
			<organizationUrl>https://www.swirlds.com</organizationUrl>
		</developer>
		<developer>
			<name>Leo Jiang</name>
			<email>leo.jiang@hedera.com</email>
			<organization>Hedera Hashgraph, LLC</organization>
			<organizationUrl>https://www.hedera.com</organizationUrl>
		</developer>
		<developer>
			<name>Michael Tinker</name>
			<email>michael.tinker@hedera.com</email>
			<organization>Hedera Hashgraph, LLC</organization>
			<organizationUrl>https://www.hedera.com</organizationUrl>
		</developer>
		<developer>
			<name>Neeharika Sompalli</name>
			<email>neeharika.sompalli@hedera.com</email>
			<organization>Hedera Hashgraph, LLC</organization>
			<organizationUrl>https://www.hedera.com</organizationUrl>
		</developer>
		<developer>
			<name>Nosh Mody</name>
			<email>nosh@swirlds.com</email>
			<organization>Swirlds, Inc.</organization>
			<organizationUrl>https://www.swirlds.com</organizationUrl>
		</developer>
		<developer>
			<name>Qian Qiu</name>
			<email>qianqiu@swirlds.com</email>
			<organization>Swirlds, Inc.</organization>
			<organizationUrl>https://www.swirlds.com</organizationUrl>
		</developer>
		<developer>
			<name>Quan Nguyen</name>
			<email>quan.nguyen@hedera.com</email>
			<organization>Hedera Hashgraph, LLC</organization>
			<organizationUrl>https://www.hedera.com</organizationUrl>
		</developer>
	</developers>

	<ciManagement>
		<system>CircleCI</system>
		<url>https://circleci.com/gh/hashgraph/hedera-services</url>
	</ciManagement>

	<issueManagement>
		<system>GitHub</system>
		<url>https://github.com/hashgraph/hedera-services/issues</url>
	</issueManagement>

	<repositories>
		<repository>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<id>central</id>
			<name>Central Repository</name>
			<url>https://repo.maven.apache.org/maven2</url>
		</repository>
		<repository>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<id>besu</id>
			<name>Hyperledger Besu</name>
			<url>https://hyperledger.jfrog.io/artifactory/besu-maven</url>
		</repository>
		<repository>
			<id>ossrh-snapshots</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>platform-maven-prerelease-channel</id>
			<url>https://us-maven.pkg.dev/swirlds-registry/maven-prerelease-channel</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>maven-develop-commits</id>
			<url>https://us-maven.pkg.dev/swirlds-registry/maven-develop-commits</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>platform-maven-adhoc-commits</id>
			<url>https://us-maven.pkg.dev/swirlds-registry/maven-adhoc-commits</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>platform-maven-develop-daily-snapshots</id>
			<url>https://us-maven.pkg.dev/swirlds-registry/maven-develop-daily-snapshots</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>platform-maven-develop-snapshots</id>
			<url>https://us-maven.pkg.dev/swirlds-registry/maven-develop-snapshots</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
	</distributionManagement>

	<licenses>
		<license>
			<distribution>repo</distribution>
			<name>Apache License 2.0</name>
			<url>https://github.com/hashgraph/hedera-services/blob/master/LICENSE</url>
		</license>
	</licenses>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- Plugin property overrides -->
		<maven.compiler.source>17</maven.compiler.source>
		<maven.compiler.target>17</maven.compiler.target>

		<!-- Plugin custom properties -->
		<maven-jar.version>3.2.2</maven-jar.version>
		<maven-source.version>3.2.0</maven-source.version>
		<maven-resources.version>3.2.0</maven-resources.version>
		<maven-license.version>2.0.0</maven-license.version>
		<maven-compiler.version>3.10.1</maven-compiler.version>
		<maven-surefire.version>3.0.0-M5</maven-surefire.version>
		<maven-dependency.version>3.3.0</maven-dependency.version>
		<maven-versions.version>2.9.0</maven-versions.version>
		<maven-javadoc.version>3.3.2</maven-javadoc.version>

		<!-- Dependency properties in alphabetical order -->
		<besu.version>22.4.1</besu.version>
		<besu-native.version>0.4.3</besu-native.version>
		<bouncycastle.version>1.70</bouncycastle.version>
		<commons-codec.version>1.15</commons-codec.version>
		<commons-io.version>2.11.0</commons-io.version>
		<commons-lang3.version>3.12.0</commons-lang3.version>
		<dagger.version>2.41</dagger.version>
		<eddsa.version>0.3.0</eddsa.version>
		<ethereum-core.version>1.12.0-v0.5.0</ethereum-core.version>
		<grpc.version>1.39.0</grpc.version>
		<guava.version>31.1-jre</guava.version>
		<hapi-proto.version>0.26.0</hapi-proto.version>
		<headlong.version>6.1.1</headlong.version>
		<javax.annotation-api.version>1.3.2</javax.annotation-api.version>
		<javax-inject.version>1</javax-inject.version>
		<log4j.version>2.17.2</log4j.version>
		<netty.version>4.1.66.Final</netty.version>
		<protobuf-java.version>3.19.4</protobuf-java.version>
		<swirlds.version>0.26.2</swirlds.version>
		<tuweni.version>2.2.0</tuweni.version>

		<!-- Test dependency properties in alphabetical order -->
		<hamcrest.version>2.2</hamcrest.version>
		<junit5.version>5.8.2</junit5.version>
		<mockito.version>4.4.0</mockito.version>
		<awaitility.version>4.2.0</awaitility.version>

		<!-- SonarCloud properties -->
		<jacoco.version>0.8.7</jacoco.version>
		<sonar.version>3.9.1.2184</sonar.version>

		<sonar.organization>hashgraph</sonar.organization>
		<sonar.host.url>https://sonarcloud.io</sonar.host.url>
		<sonar.language>java</sonar.language>
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<sonar.issue.ignore.multicriteria>e1,e2</sonar.issue.ignore.multicriteria>
		<!-- for license header -->
		<sonar.issue.ignore.multicriteria.e1.resourceKey>**/*.java</sonar.issue.ignore.multicriteria.e1.resourceKey>
		<sonar.issue.ignore.multicriteria.e1.ruleKey>java:S125</sonar.issue.ignore.multicriteria.e1.ruleKey>
		<!-- for deprecated code, mostly protobufs, to support backward compatibility for clients -->
		<sonar.issue.ignore.multicriteria.e2.resourceKey>**/*.java</sonar.issue.ignore.multicriteria.e2.resourceKey>
		<sonar.issue.ignore.multicriteria.e2.ruleKey>java:S1874</sonar.issue.ignore.multicriteria.e2.ruleKey>

		<project.build.outputTimestamp>2022-04-02T00:14:21Z</project.build.outputTimestamp>
	</properties>

	<modules>
		<module>hapi-utils</module>
		<module>hapi-fees</module>
		<module>hedera-node</module>
		<module>test-clients</module>
	</modules>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>3.0.0-M5</version>
				<configuration>
					<releaseProfiles>release</releaseProfiles>
					<autoVersionSubmodules>true</autoVersionSubmodules>
					<tagNameFormat>v@{project.version}</tagNameFormat>
					<scmDevelopmentCommitComment>
						@{prefix} Prepare for next dev iteration

						${git.signoff}
					</scmDevelopmentCommitComment>
					<scmReleaseCommitComment>
						@{prefix} Prepare release

						${git.signoff}
					</scmReleaseCommitComment>
					<scmBranchCommitComment>
						@{prefix} Create release branch

						${git.signoff}
					</scmBranchCommitComment>
					<preparationGoals>
						clean
						license:update-file-header
						verify
						exec:exec@stage-changes
					</preparationGoals>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven-javadoc.version}</version>
				<configuration>
					<javadocExecutable>${java.home}/bin/javadoc</javadocExecutable>
					<!--					<failOnWarnings>true</failOnWarnings>-->
				</configuration>
				<executions>
					<execution>
						<phase>install</phase>
						<id>generate-javadocs</id>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>stage-changes</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>/bin/sh</executable>
							<commandlineArgs>
								-c 'echo "Nothing to do here."'
							</commandlineArgs>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>license-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>jacoco-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-report</id>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<!-- To re-generate the LICENSE.txt and copyright headers, execute the Maven goals
					"license:update-project-license" and "license:update-file-header". -->
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>license-maven-plugin</artifactId>
					<version>${maven-license.version}</version>
					<configuration>
						<dryRun>false</dryRun>
						<canUpdateDescription>false</canUpdateDescription>
						<canUpdateCopyright>false</canUpdateCopyright>
						<includes>
							<include>**/*.java</include>
						</includes>
						<licenseName>apache_v2</licenseName>
						<roots>
							<root>src/main/java</root>
							<root>src/test/java</root>
						</roots>
						<processEndTag>‍</processEndTag>
						<processStartTag>‌</processStartTag>
						<sectionDelimiter>​</sectionDelimiter>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler.version}</version>
					<configuration>
						<annotationProcessorPaths>
							<path>
								<groupId>com.google.dagger</groupId>
								<artifactId>dagger-compiler</artifactId>
								<version>${dagger.version}</version>
							</path>
						</annotationProcessorPaths>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven-jar.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven-source.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven-source.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>${maven-dependency.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire.version}</version>
					<configuration>
						<forkCount>3</forkCount>
						<reuseForks>true</reuseForks>
						<argLine>@{argLine} -Xmx5120m</argLine>
						<useSystemClassLoader>false</useSystemClassLoader>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>${maven-versions.version}</version>
				</plugin>
				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>${sonar.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.bouncycastle</groupId>
				<artifactId>bcprov-jdk15on</artifactId>
				<version>${bouncycastle.version}</version>
			</dependency>
			<dependency>
				<groupId>org.bouncycastle</groupId>
				<artifactId>bcpkix-jdk15on</artifactId>
				<version>${bouncycastle.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.tuweni</groupId>
				<artifactId>tuweni-units</artifactId>
				<version>${tuweni.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hyperledger.besu</groupId>
				<artifactId>bls12-381</artifactId>
				<version>${besu-native.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hyperledger.besu</groupId>
				<artifactId>secp256k1</artifactId>
				<version>${besu-native.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hyperledger.besu</groupId>
				<artifactId>evm</artifactId>
				<version>${besu.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hyperledger.besu</groupId>
				<artifactId>besu-datatypes</artifactId>
				<version>${besu.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hyperledger.besu.internal</groupId>
				<artifactId>crypto</artifactId>
				<version>${besu.version}</version>
			</dependency>
			<dependency>
				<groupId>com.esaulpaugh</groupId>
				<artifactId>headlong</artifactId>
				<version>${headlong.version}</version>
			</dependency>
			<dependency>
				<groupId>io.grpc</groupId>
				<artifactId>grpc-bom</artifactId>
				<version>${grpc.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-bom</artifactId>
				<version>${netty.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.swirlds</groupId>
				<artifactId>swirlds-virtualmap</artifactId>
				<version>${swirlds.version}</version>
			</dependency>
			<dependency>
				<groupId>com.swirlds</groupId>
				<artifactId>swirlds-jasperdb</artifactId>
				<version>${swirlds.version}</version>
			</dependency>
			<dependency>
				<groupId>com.swirlds</groupId>
				<artifactId>swirlds-platform-core</artifactId>
				<version>${swirlds.version}</version>
			</dependency>
			<dependency>
				<groupId>com.swirlds</groupId>
				<artifactId>swirlds-fchashmap</artifactId>
				<version>${swirlds.version}</version>
			</dependency>
			<dependency>
				<groupId>com.swirlds</groupId>
				<artifactId>swirlds-fcqueue</artifactId>
				<version>${swirlds.version}</version>
			</dependency>
			<dependency>
				<groupId>com.swirlds</groupId>
				<artifactId>swirlds-merkle</artifactId>
				<version>${swirlds.version}</version>
			</dependency>
			<dependency>
				<groupId>org.junit</groupId>
				<artifactId>junit-bom</artifactId>
				<version>${junit5.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.hedera.hashgraph</groupId>
				<artifactId>ethereumj-core</artifactId>
				<version>${ethereum-core.version}</version>
				<exclusions>
					<exclusion>
						<groupId>*</groupId>
						<artifactId>junit</artifactId>
					</exclusion>
					<exclusion>
						<groupId>com.cedarsoftware</groupId>
						<artifactId>*</artifactId>
					</exclusion>
					<exclusion>
						<groupId>com.googlecode.json-simple</groupId>
						<artifactId>*</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.netty</groupId>
						<artifactId>*</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.apache.logging.log4j</groupId>
						<artifactId>*</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.ethereum</groupId>
						<artifactId>*</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.iq80.leveldb</groupId>
						<artifactId>*</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>*</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.xerial.snappy</groupId>
						<artifactId>*</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>com.google.dagger</groupId>
			<artifactId>dagger</artifactId>
			<version>${dagger.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>${commons-codec.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons-io.version}</version>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${guava.version}</version>
		</dependency>
		<dependency>
			<groupId>com.google.protobuf</groupId>
			<artifactId>protobuf-java</artifactId>
			<version>${protobuf-java.version}</version>
		</dependency>
		<dependency>
			<groupId>com.hedera.hashgraph</groupId>
			<artifactId>hedera-protobuf-java-api</artifactId>
			<version>${hapi-proto.version}</version>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.swirlds</groupId>
			<artifactId>swirlds-common</artifactId>
			<version>${swirlds.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>javax.annotation-api</artifactId>
			<version>${javax.annotation-api.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>${javax-inject.version}</version>
		</dependency>
		<dependency>
			<groupId>net.i2p.crypto</groupId>
			<artifactId>eddsa</artifactId>
			<version>${eddsa.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${commons-lang3.version}</version>
		</dependency>
		<!-- Logging dependencies -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>com.cedarsoftware</groupId>
			<artifactId>java-util</artifactId>
			<version>2.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tuweni</groupId>
			<artifactId>tuweni-bytes</artifactId>
			<version>${tuweni.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tuweni</groupId>
			<artifactId>tuweni-units</artifactId>
			<version>${tuweni.version}</version>
		</dependency>
		<!-- Test dependencies -->
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest</artifactId>
			<version>${hamcrest.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>${junit5.version}</version>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-params</artifactId>
			<version>${junit5.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.awaitility</groupId>
			<artifactId>awaitility</artifactId>
			<version>${awaitility.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>release</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>${maven-javadoc.version}</version>
						<configuration>
							<javadocExecutable>${java.home}/bin/javadoc</javadocExecutable>
							<!--							<failOnWarnings>true</failOnWarnings>-->
						</configuration>
						<executions>
							<execution>
								<phase>deploy</phase>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>3.0.1</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>deploy</phase>
								<goals>
									<goal>sign</goal>
								</goals>
								<configuration>
									<gpgArguments>
										<arg>--pinentry-mode</arg>
										<arg>loopback</arg>
									</gpgArguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.sonatype.plugins</groupId>
						<artifactId>nexus-staging-maven-plugin</artifactId>
						<version>1.6.12</version>
						<executions>
							<execution>
								<id>default-deploy</id>
								<phase>deploy</phase>
								<goals>
									<goal>deploy</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<serverId>ossrh</serverId>
							<nexusUrl>https://oss.sonatype.org/</nexusUrl>
							<skipStaging>false</skipStaging>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
